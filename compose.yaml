services:
    backend:
        hostname: backend
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        environment:
            - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydatabase'
            - 'SPRING_DATASOURCE_USERNAME=myuser'
            - 'SPRING_DATASOURCE_PASSWORD=secret'
            - 'SPRING_REDIS_HOST=redis'
            - 'SPRING_REDIS_PORT=6379'
            - 'SPRING_JPA_HIBERNATE_DDL-AUTO=update'
            - 'SPRING_JPA_OPEN-IN-VIEW=false'
        healthcheck:
            test: curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 10s
        links:
            - postgres
            - redis
    postgres:
        image: 'postgres:15.4'
        hostname: postgres
        restart: unless-stopped
        environment:
            - 'POSTGRES_DB=mydatabase'
            - 'POSTGRES_PASSWORD=secret'
            - 'POSTGRES_USER=myuser'
        volumes:
            - postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U myuser -d mydatabase'" ]
            interval: 5s
            timeout: 5s
            retries: 3
            start_period: 5s
    redis:
        image: 'redis:6.2.13'
        hostname: redis
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 1s
            timeout: 3s
            retries: 30
volumes:
    postgres-data:
        external: false